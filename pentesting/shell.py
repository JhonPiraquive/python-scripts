"""
    ---------------------------------
    | Shell for Automated Scripts   |
    ---------------------------------
    | Author: Alejandro Piraquive   |
    ---------------------------------
    | Version: 1.0                  |
    ---------------------------------
    | Date: 2024-06-09              |
    ---------------------------------
"""

# Imports Section
import scanning
import misc
# import sys

phases = {
    'SCANNING': scanning.commands,
    'MISC': misc.commands
    # 'domains': nmap_scanner.scan_ips_description,
}

def print_commands():
    for phase in phases:
        print(f'-------- {phase} --------')
        print('\nCOMMAND\t\t\t\tDESCRIPTION\n')
        for command in phases[phase]:
            print(f'{command}{phases[phase][command]}\n')

def execute_command(command):

    # Help Command
    if command == 'help' or command == 'h':
        print_commands()

    # Misc Commands
    elif command == 'cls' or command == 'clear':
        misc.clear_console()

    # Scan Commands
    elif command == "get_my_ips":
        scanning.get_my_ips()
    elif command == "get_local_ip":
        scanning.get_local_ip()
    elif command == "get_public_ip":
        scanning.get_public_ip()
    elif command == "scan_ips":
        network = input('Network (Ex: 192.168.1.0/24): ')
        interface = input('Network Interface (Ex: Ethernet | eth0): ')
        
        if (network != '' and interface != ''):
            scanning.scan_ips(network, interface)
        else:
            print('Not enough parameters')
    elif command == "get_network_interfaces":
        scanning.get_network_interfaces()
    else:
        print(f"Unknown command: {command}")

def main():
    while True:
        command = input("Enter command (h or help to see all the commands | exit or quit to escape from the console): ")
        if command in ["exit", "quit"]:
            print("Exiting shell.")
            break
        execute_command(command)

if __name__ == "__main__":
    main()